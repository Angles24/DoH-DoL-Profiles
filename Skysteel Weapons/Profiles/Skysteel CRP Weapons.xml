<?xml version="1.0" encoding="utf-8"?>
<!--
Author: Angles24 / Kayla
Required: LLamaLibrary BotBase
		  Lisbeth BotBase
          ALL currently obtained Skysteel weapons in inventory or Armory.
-->
<Profile>
	<Name>Dragonsung Saw</Name>
	<Order>
	
	<RunCode Name="Disable_Flight"/>
	
	<StopCrafting/>
	
	<If Condition="ClassName != ClassJobType.Carpenter">
		<ChangeClass Job="Carpenter"/>
	</If>
	<If Condition="ClassName == ClassJobType.Carpenter and Core.Player.ClassLevel &gt; 79">
		
		<If Condition="not IsQuestCompleted(69384)">
			<If Condition="not HasQuest(69384) and not IsQuestCompleted(69384) and IsQuestCompleted(69208)">
				<GetTo ZoneId="418" XYZ="150.3899, -20, 64.72313"/>
				<If Condition="IsQuestAcceptQualified(69384)">
					<LLPickupQuest NpcId="1032897" QuestId="69384" XYZ="150.3899, -20, 64.72313"/>
					<LLSmallTalk/>
				</If>
			</If>
			<If Condition="HasQuest(69384) and not IsQuestCompleted(69384) and GetQuestStep(69384) == 255">
				<GetTo ZoneId="418" XYZ="-163.47, 16.97958, -29.31262"/>
				<LLTurnIn QuestId="69384" NpcId="1032898" XYZ="-163.47, 16.97958, -29.31262"/>
				<LLSmallTalk/>
				<WaitTimer WaitTime="2"/>
				<RunCode Name="Coffer"/>
			</If>
		</If>
		
		<If Condition="not IsQuestCompleted(69385) and IsQuestCompleted(69384)">
			<If Condition="not HasQuest(69385) and not IsQuestCompleted(69385) and IsQuestCompleted(69384)">
				<GetTo ZoneId="418" XYZ="-163.47, 16.97958, -29.31262"/>
				<If Condition="IsQuestAcceptQualified(69385)">
					<LLPickupQuest NpcId="1032898" QuestId="69385" XYZ="-163.47, 16.97958, -29.31262"/>
					<LLSmallTalk/>
				</If>
			</If>
		</If>
		
		<If Condition="not (HasItem(29612) or HasItem(29623) or HasItem(29634) or HasItem(29634) or HasItem(30282) or HasItem(30293))">
			<GetTo ZoneId="418" XYZ="-161.5168, 16.99999, -57.14508"/>
			<BuyItem ItemId="29612" ItemCount="1" DialogOption="4" NpcId="1032900" XYZ="-161.5168, 16.99999, -57.14508"/>
		</If>
		
		<While Condition="HasItem(29612)"><!-- Skysteel Saw -->
			<If Condition="not HqHasAtLeast(29645,20)"><!-- Oddly Specific Petrified Orb -->
				<Lisbeth Json="[{'Id':1,'Group':1,'Item':29645,'Amount':20,'Hq':true,'Enabled':true,'Type':'Carpenter'}]"/>
			</If>
			<If Condition="HasItem(29612) and HqHasAtLeast(29645,20)">
				<GetTo ZoneId="418" XYZ="-160.8965, 17.06712, -55.63131"/>
				<While Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId == 29612">
					<ChangeClass Job="Carpenter"/>
					<WaitTimer WaitTime="3"/>
					<While Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId == 29612">
						<RunCode Name="SwitchCombatJob"/>
					</While>
				</While>
				<BuyShopExchangeItem NpcId="1032900" ItemId="29623" SelectString="0"/><!-- Buy Skysteel Saw +1 -->
				<WaitTimer WaitTime="3"/>
				<RunCode Name="CloseShop"/>
			</If>
		</While>
			
		<While Condition="HasItem(29623)"><!-- Skysteel Saw +1 -->
			<If Condition="not HqHasAtLeast(29653,30)"><!-- Oddly Specific Shaft -->
				<Lisbeth Json="[{'Id':1,'Group':1,'Item':29653,'Amount':30,'Hq':true,'Enabled':true,'Type':'Carpenter'}]"/>
			</If>
			<While Condition="HasItem(29623) and HqHasAtLeast(29653,30)">
				<GetTo ZoneId="418" XYZ="-160.8965, 17.06712, -55.63131"/>
				<While Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId == 29623">
					<ChangeClass Job="Carpenter"/>
					<WaitTimer WaitTime="3"/>
					<While Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId == 29623">
						<RunCode Name="SwitchCombatJob"/>
					</While>
				</While>
				<BuyShopExchangeItem NpcId="1032900" ItemId="29634" SelectString="1"/><!-- Buy Dragonsung Saw -->
				<WaitTimer WaitTime="3"/>
				<RunCode Name="CloseShop"/>
			</While>
		</While>
		
		<If Condition="HasItem(29634) and HasQuest(69385)"><!-- Dragonsung Saw -->
			<While Condition="ClassName != ClassJobType.Carpenter">
				<ChangeClass Job="Carpenter"/>
			</While>
			<While Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 29634">
				<RunCode Name="SkysteelCRP3"/>
				<WaitTimer WaitTime="3"/>
			</While>
			<If Condition="HasQuest(69385) and not IsQuestCompleted(69385) and GetQuestStep(69385) == 255">
				<GetTo ZoneId="418" XYZ="-165.3315, 16.97958, -30.53339"/>
				<LLTurnIn QuestId="69385" NpcId="1032899" XYZ="-165.3315, 16.97958, -30.53339"/>
				<LLSmallTalk/>
			</If>
		</If>	
		
		<!-- Part 2 -->
		
		<If Condition="not IsQuestCompleted(69428) and IsQuestCompleted(69385)">	
			<If Condition="not HasQuest(69428) and not IsQuestCompleted(69428) and IsQuestCompleted(69384)">
				<GetTo ZoneId="418" XYZ="-163.47, 16.97958, -29.31262"/>
				<If Condition="IsQuestAcceptQualified(69428)">
					<LLPickupQuest NpcId="1032898" QuestId="69428" XYZ="-163.47, 16.97958, -29.31262"/>
					<LLSmallTalk/>
				</If>
			</If>
			<If Condition="HasQuest(69428) and not IsQuestCompleted(69428) and GetQuestStep(69428) == 255">
				<GetTo ZoneId="418" XYZ="-165.3315, 16.97958, -30.53339"/>
				<LLTurnIn QuestId="69428" NpcId="1032899" XYZ="-165.3315, 16.97958, -30.53339"/>
				<LLSmallTalk/>
			</If>
		</If>
		<While Condition="not HasQuest(69429) and HasItem(29634)">	
			<GetTo ZoneId="418" XYZ="-165.3315, 16.97958, -30.53339"/>
			<RunCode Name="EverSkyward"/>
		</While>
		<If Condition="HasQuest(69429) and HasItem(29634) and GetQuestStep(69429) == 255">
			<If Condition="LLHasItemCollectable(31101)">
				<GetTo ZoneId="418" XYZ="-160.8965, 17.06712, -55.63131"/>
				<RunCode Name="TurnIn"/>
			</If>	
			<If Condition="not HasAtLeast(30315,90)"> <!-- Carpenter's Gobbiegoo -->
				<Lisbeth Json="[{'Id':1,'Group':1,'Item':31101,'Amount':30,'Enabled':true,'Type':'Carpenter'}]"/>
			</If>
			<If Condition="LLHasItemCollectable(31101)">
				<GetTo ZoneId="418" XYZ="-160.8965, 17.06712, -55.63131"/>
				<RunCode Name="TurnIn"/>
			</If>	
			<If Condition="HasAtLeast(30315,90)">
				<GetTo ZoneId="418" XYZ="-165.3315, 16.97958, -30.53339"/>
				<ChangeClass Job="Carpenter" force="True"/>
				<LLTurnIn QuestId="69429" NpcId="1032899" XYZ="-165.3315, 16.97958, -30.53339"/>
				<LLSmallTalk/>
			</If>
		</If>
		<While Condition="not HasQuest(69430) and HasItem(30282)">	
			<GetTo ZoneId="418" XYZ="-165.3315, 16.97958, -30.53339"/>
			<RunCode Name="ToolsOfTomorrow"/>
		</While>
		<If Condition="HasQuest(69430) and HasItem(30282) and GetQuestStep(69430) == 255">
			<If Condition="LLHasItemCollectable(31109)">
				<GetTo ZoneId="418" XYZ="-160.8965, 17.06712, -55.63131"/>
				<RunCode Name="TurnIn"/>
			</If>
			<If Condition="not HasAtLeast(30316,105)"> <!-- Highly Viscous Carpenter's Gobbiegoo -->
				<Lisbeth Json="[{'Id':1,'Group':1,'Item':31109,'Amount':30,'Enabled':true,'Type':'Carpenter'}]"/>
			</If>	
			<If Condition="LLHasItemCollectable(31109)">
				<GetTo ZoneId="418" XYZ="-160.8965, 17.06712, -55.63131"/>
				<RunCode Name="TurnIn"/>
			</If>
			<If Condition="HasAtLeast(30316,105)">
				<GetTo ZoneId="418" XYZ="-165.3315, 16.97958, -30.53339"/>
				<ChangeClass Job="Carpenter" force="True"/>
				<LLTurnIn QuestId="69430" NpcId="1032899" XYZ="-165.3315, 16.97958, -30.53339"/>
				<LLSmallTalk/>
			</If>
		</If>
		
	</If>

	<LLoadProfile Path="../Skysteel Start.xml"/>
	
	</Order>
	<CodeChunks>		
		<CodeChunk Name="TurnIn">
		<![CDATA[
			Logging.Write("[Skysteel Handin] calling");
			await LlamaLibrary.TesterBase.TurninSkySteelCrafting();
		]]>
		</CodeChunk>		
		<CodeChunk Name="ManualTurnIn">
		<![CDATA[ 
			Core.OverlayManager.AddToast(() => "Please manually turn in collectables and press start again.", TimeSpan.FromMilliseconds(10000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
			await Coroutine.Sleep(3000);
		]]>
		</CodeChunk>
		<CodeChunk Name="EverSkyward">
			<![CDATA[ 
				var npcId = GameObjectManager.GetObjectByNPCId(1032899);

				if (!npcId.IsWithinInteractRange)
				{
					var _target = npcId.Location;
					Navigator.PlayerMover.MoveTowards(_target);
					while (_target.Distance2D(Core.Me.Location) >= 4)
					{
						Navigator.PlayerMover.MoveTowards(_target);
						await Coroutine.Sleep(100);
					}
					Navigator.PlayerMover.MoveStop();
				}

				npcId.Interact();
				
				await Coroutine.Wait(5000, () => SelectIconString.IsOpen);
				SelectIconString.ClickSlot(0);
				
				await Coroutine.Wait(5000, () => Talk.DialogOpen);
                while (Talk.DialogOpen)
                {
                    Talk.Next();
                    await Coroutine.Sleep(1000);
                }
				
				await Buddy.Coroutines.Coroutine.Sleep(1000);
				await Coroutine.Wait(1000, () => SelectIconString.IsOpen);
				SelectString.ClickSlot(1);
				
				await Buddy.Coroutines.Coroutine.Sleep(1000);
				await Coroutine.Wait(1000, () => JournalAccept.IsOpen);
				JournalAccept.Accept();
				
				await Coroutine.Wait(5000, () => Talk.DialogOpen);
                while (Talk.DialogOpen)
                {
                    Talk.Next();
                    await Coroutine.Sleep(1000);
                }				
				
			]]>
		</CodeChunk>
		<CodeChunk Name="ToolsOfTomorrow">
			<![CDATA[ 
				var npcId = GameObjectManager.GetObjectByNPCId(1032899);

				if (!npcId.IsWithinInteractRange)
				{
					var _target = npcId.Location;
					Navigator.PlayerMover.MoveTowards(_target);
					while (_target.Distance2D(Core.Me.Location) >= 4)
					{
						Navigator.PlayerMover.MoveTowards(_target);
						await Coroutine.Sleep(100);
					}
					Navigator.PlayerMover.MoveStop();
				}

				npcId.Interact();
				
				await Coroutine.Wait(5000, () => SelectIconString.IsOpen);
				SelectIconString.ClickSlot(0);
				
				await Coroutine.Wait(5000, () => Talk.DialogOpen);
                while (Talk.DialogOpen)
                {
                    Talk.Next();
                    await Coroutine.Sleep(1000);
                }
				
				await Buddy.Coroutines.Coroutine.Sleep(1000);
				await Coroutine.Wait(1000, () => SelectIconString.IsOpen);
				SelectString.ClickSlot(1);
				
				await Buddy.Coroutines.Coroutine.Sleep(1000);
				await Coroutine.Wait(1000, () => JournalAccept.IsOpen);
				JournalAccept.Accept();
				
				await Coroutine.Wait(5000, () => Talk.DialogOpen);
                while (Talk.DialogOpen)
                {
                    Talk.Next();
                    await Coroutine.Sleep(1000);
                }				
				
			]]>
		</CodeChunk>
		<CodeChunk Name="CloseShop">
			<![CDATA[ 
				var windowName = "ShopExchangeItem";
				await Coroutine.Wait(5000, () => RaptureAtkUnitManager.GetWindowByName(windowName) != null);				
				AtkAddonControl windowByName = RaptureAtkUnitManager.GetWindowByName(windowName);					
				windowByName = RaptureAtkUnitManager.GetWindowByName("ShopExchangeItem");
				await Coroutine.Wait(5000, () => windowByName != null);
				if (windowByName != null)
				windowByName.SendAction(1, 3uL, 4294967295uL);		
			]]>
		</CodeChunk>
		<CodeChunk Name="Coffer">
			<![CDATA[		
				foreach (var bagslot in InventoryManager.FilledSlots.Where(bagslot => bagslot.Item.ItemAction == 388))
				{
                bagslot.UseItem();
                await Coroutine.Sleep(5000);
				}
			]]> 
		</CodeChunk>
		<CodeChunk Name="SkysteelCRP3">
			<![CDATA[ 
				BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
				foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
				{
					if(slot.RawItemId == 29634)
					{
						slot.Move(EquipSlot);
					}
				}
		]]>
		</CodeChunk>
		<CodeChunk Name="SwitchCombatJob">
            <![CDATA[ 
            var Combat = Enumerable.Range(8, 11).Append(0).Append(36);
            var gearSets = GearsetManager.GearSets.Where(i => i.InUse && !Combat.Contains((int)i.Class)).ToList().OrderByDescending(i=> i.Gear.First().Item.ItemLevel);

            if (gearSets.Any())
            {
                gearSets.First().Activate();
                await Coroutine.Sleep(2000);
            }
            ]]>
        </CodeChunk>
		<CodeChunk Name="Enable_Flight">
      <![CDATA[
        foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "Enable Flight" || p.Plugin.Name == "启用飞行"))
        {
          try
          {
            if (plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = true;  }
          }
          catch (Exception ex) {  }
        }
      ]]>
    </CodeChunk>
	<CodeChunk Name="Disable_Flight">
		<![CDATA[
			foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "Enable Flight" || p.Plugin.Name == "启用飞行"))
			{
			try
			{
				if (!plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = false;  }
			}
			catch (Exception ex) {  }
			}
		]]>
		</CodeChunk>
	</CodeChunks>
</Profile>
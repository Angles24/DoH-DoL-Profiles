<?xml version="1.0" encoding="UTF-8"?>
<!--
Authors:  Kayla / Angles24 
-->
<Profile>
<Name>Crafting Alchemist to 80</Name>
<BehaviorDirectory>..\Quest Behaviors</BehaviorDirectory>
<Order>
	
	<!-- Leave Diadem -->
	<If Condition="(WorldManager.ZoneId == 901)">
		<RunCode Name="Leave"/>
		<WaitTimer waitTime="7"/>
		<WaitWhile Condition="not GameObjectManager.GetObjectByNPCId(1031694)" />
	</If>
		
	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<RunCode Name="TurnIn"/>
		</While>	
	</If>
	
	<WaitTimer WaitTime="2"/>
	<RunCode Name="AutoEquip" />
	<WaitTimer WaitTime="2"/>
	<RunCode Name="UpdateGearSet"/>	
    <WaitTimer WaitTime="2"/>
	
	<!-- Gather Materials -->	
	<If Condition="(Core.Me.Levels[ClassJobType.Alchemist] &gt; 69) and  (Core.Me.Levels[ClassJobType.Alchemist] &lt; 80)">
		<Lisbeth Json="[{'Group':1,'Item':29822,'Amount':15,'Enabled':true,'Type':'Alchemist','Collectable':false}]"/>		
	</If>
	
	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<RunCode Name="TurnIn"/>
		</While>	
	</If>
	
	<WaitTimer WaitTime="2"/>
	<RunCode Name="AutoEquip" />
	<WaitTimer WaitTime="2"/>
	<RunCode Name="UpdateGearSet"/>	
    <WaitTimer WaitTime="2"/>
	
	<!-- Reload Profile -->
	<If Condition="Core.Me.Levels[ClassJobType.Alchemist] &lt; 80">
		<ALoadProfile Path="70-80 AlchemistD.xml"/>
	</If>
	
	<!-- Load Start -->
	<LogMessage Message="Congrats on Level 80 on Alchemist, moving on." />	
	<ALoadProfile Path="../Start.xml"/>
		
</Order>
<CodeChunks>
	<CodeChunk Name="AutoEquip">
    <![CDATA[ 
		var patternFinder = new GreyMagic.PatternFinder(Core.Memory);
        IntPtr agentVtable = patternFinder.Find("48 8D 05 ? ? ? ? C6 43 ? ? 48 89 03 48 8B C3 C7 43 ? ? ? ? ? Add 3 TraceRelative");
        int id = AgentModule.FindAgentIdByVtable(agentVtable);
        AtkAddonControl windowByName = RaptureAtkUnitManager.GetWindowByName("RecommendEquip");
        if (windowByName == null)
        {
            AgentModule.GetAgentInterfaceById(id).Toggle();
        }
        await Coroutine.Wait(10000, () => RaptureAtkUnitManager.GetWindowByName("RecommendEquip") != null);            
        windowByName = RaptureAtkUnitManager.GetWindowByName("RecommendEquip");            
        if (windowByName != null)
        {
            windowByName.SendAction(1, 3, 0);
        }			
		await Coroutine.Sleep(2000);           		
    ]]>
	</CodeChunk>
	<CodeChunk Name="UpdateGearSet">
	<![CDATA[ 
		var patternFinder = new GreyMagic.PatternFinder(Core.Memory);
        IntPtr agentCharVtable = patternFinder.Find("48 8D 05 ? ? ? ? 89 77 ? Add 3 TraceRelative");
		int idChar = AgentModule.FindAgentIdByVtable(agentCharVtable);
		AtkAddonControl windowByName = RaptureAtkUnitManager.GetWindowByName("Character");
		if (windowByName == null)
		{
			AgentModule.GetAgentInterfaceById(idChar).Toggle();
		}
		await Coroutine.Wait(10000, () => RaptureAtkUnitManager.GetWindowByName("Character") != null);
		windowByName = RaptureAtkUnitManager.GetWindowByName("Character");
		if (windowByName != null)
		{
			windowByName.SendAction(1, 3, 0xF);
		}            
        await Coroutine.Wait(5000, () => SelectYesno.IsOpen);
        if (SelectYesno.IsOpen)
        SelectYesno.Yes();
		await Coroutine.Wait(5000, () => !SelectYesno.IsOpen);			
        await Coroutine.Sleep(200);			
		windowByName = RaptureAtkUnitManager.GetWindowByName("Character");
		if (windowByName != null)
		{
			AgentModule.GetAgentInterfaceById(idChar).Toggle();
		}			
	]]>
	</CodeChunk>
	<CodeChunk name="Leave">
	<![CDATA[
		if (DutyManager.InInstance)
		{
		DutyManager.LeaveActiveDuty();
		if (await Coroutine.Wait(30000, () => CommonBehaviors.IsLoading))
		{
		await Coroutine.Yield();
		await Coroutine.Wait(Timeout.Infinite, () => !CommonBehaviors.IsLoading);
		await Coroutine.Sleep(1000);
		}
		}
	]]>
	</CodeChunk>
	<CodeChunk Name="TurnIn">
	<![CDATA[
		Logging.Write("[Handin] calling");
		await LlamaLibrary.IshgardHandinBase.HandinNew();
		await LlamaLibrary.IshgardHandinBase.GatheringHandin();
	]]>
	</CodeChunk>
</CodeChunks>
</Profile>
<?xml version="1.0" encoding="UTF-8"?>
<!--
Authors:  Kayla / Angles24
-->
<Profile>
<Name>Crafting Culinarian to 84</Name>
<Order>
	
	<!-- Check to see if have collectables -->
	<While Condition="HasRarefiedItem() &gt; 0">
		<LLTurnInCollectables/>
		<While Condition="ItemCount(25199) &gt; 249"> <!-- 25199 = White Crafters' Scrip Scrip -->
			<BuyInclusionShopItem ItemId="33927" Count="0"/>
		</While>
	</While>

	<!-- 80-84  -->
	<If Condition="(Core.Me.Levels[ClassJobType.Fisher] &gt; 79) and (Core.Me.Levels[ClassJobType.Culinarian] &gt; 79) and (Core.Me.Levels[ClassJobType.Culinarian] &lt; 84)">	
		<If Condition="not HasAtLeast(36386,10)">			
			<While Condition="ClassName != ClassJobType.Fisher">
				<ChangeClass Job="Fisher"/>
			</While>
			<While condition="not HasAtLeast(36386,10)">
			  <!-- Buy Bait: Versatile Lure -->
			  <If condition="not HasAtLeast(29717, 2)">
				<GetTo ZoneId="129" XYZ="-397.5682, 3.099996, 78.50582" />
				<BuyItem ItemIds="29717" ItemCounts="5" DialogOption="0" NpcId="1005422" XYZ="-397.6349, 3.099996, 80.97961" />
			  </If>
			  <!-- Buy Bait: Shrimp Ball -->
			  <If condition="not HasAtLeast(36592, 50)">
				<GetTo ZoneId="962" XYZ="76.62195, 5.149998, -46.58043" />
				<BuyItem ItemIds="36592" ItemCounts="99" NpcId="1037054" XYZ="76.62195, 5.149998, -46.58043" />
			  </If>
			  <If condition="not IsOnMap(962)">
				<TeleportTo AetheryteId="182" />
			  </If>
			  <!-- Reset fishing hole counter in alternate fishing hole -->
			  <ExFish Condition="IsTimeBetween(0, 2) and not HasAtLeast(36386,20)" Bait="Versatile Lure" MinFish="7" MaxFish="15" ShuffleFishSpots="True" SitRate="0.65" Radius="1.0">
				<Keepers>
				  <Keeper Name="Peacock Bass" />
				  <Keeper Name="Ponderer" />
				</Keepers>
				<FishSpots>
				  <!-- Oinops; contains GC Turn-In Fish "Peacock Bass" -->
				  <FishSpot XYZ="88.29301, -0.08595288, 6.372217" Heading="1.145103" />
				  <FishSpot XYZ="113.6531, 1.004198, 7.875022" Heading="4.248996" />
				  <FishSpot XYZ="139.5285, 17.34819, -133.3341" Heading="4.496133" />
				  <FishSpot XYZ="145.3561, 22.40789, -206.3664" Heading="4.45215" />
				  <FishSpot XYZ="115.5803, 18.30788, -152.3636" Heading="1.397342" />
				  <FishSpot XYZ="-114.9204, 21.68826, -143.2932" Heading="4.687635" />
				  <FishSpot XYZ="-137.6492, 22.53263, -153.0278" Heading="1.958637" />
				  <!-- Reflecting Pool; contains FSH Leve Fish "Ponderer" -->
				  <FishSpot XYZ="-170.5678, 8.329226, -17.23495" Heading="3.298871" />
				  <FishSpot XYZ="-164.4025, 8.360573, -22.08364" Heading="3.998397" />
				  <FishSpot XYZ="-164.6299, 8.187684, -30.43165" Heading="5.217336" />
				  <FishSpot XYZ="-174.2337, 10.93477, -36.18143" Heading="0.278754" />
				  <FishSpot XYZ="-181.6324, 8.564054, -28.31185" Heading="1.746925" />
				  <FishSpot XYZ="-176.8491, 9.976626, -20.83557" Heading="1.9061" />
				  <FishSpot XYZ="-171.0468, 7.96882, -23.72962" Heading="3.416338" />
				</FishSpots>
			  </ExFish>
			  <LLDesynth ItemIds="36390,36393,36394,36396" />
			  <!-- Real fishing hole: Scholar's Harbor -->
			  <ExFish condition="HasAtLeast(36592,1) and not IsTimeBetween(0, 2) and not HasAtLeast(36386,20)" Bait="Shrimp Ball" IdenticalCast="True" MinFish="15" MaxFish="25" ShuffleFishSpots="True" SitRate="0.65" Radius="1.0">
				<Keepers>
				  <Keeper Name="Northern Herring" />
				</Keepers>
				<FishSpots>
				  <FishSpot XYZ="-48.65726, -16.24691, 83.17622" Heading="2.3463" />
				  <FishSpot XYZ="-26.55533, -16.24691, 92.26959" Heading="3.253173" />
				  <FishSpot XYZ="-10.16805, -16.24691, 82.78511" Heading="4.05742" />
				  <FishSpot XYZ="9.97077, -16.24691, 82.55492" Heading="2.354676" />
				  <FishSpot XYZ="26.03207, -14.447, 71.47998" Heading="3.778867" />
				  <FishSpot XYZ="38.01416, -14.447, 64.69572" Heading="3.322289" />
				  <FishSpot XYZ="46.0041, -14.447, 63.1455" Heading="3.211286" />
				  <FishSpot XYZ="54.47649, -14.447, 63.42309" Heading="2.949487" />
				  <FishSpot XYZ="67.01522, -14.447, 68.44884" Heading="2.614384" />
				  <FishSpot XYZ="86.60326, -16.24705, 108.1613" Heading="2.643704" />
				  <FishSpot XYZ="97.61897, -16.247, 123.8912" Heading="2.013292" />
				  <FishSpot XYZ="105.6136, -16.147, 145.8938" Heading="2.509664" />
				  <FishSpot XYZ="120.8625, -16.147, 156.187" Heading="2.333735" />
				  <FishSpot XYZ="134.2972, -16.14716, 171.4471" Heading="2.111729" />
				  <FishSpot XYZ="142.6313, -15.9389, 178.702" Heading="2.790313" />
				  <FishSpot XYZ="153.3631, -16.147, 176.1801" Heading="3.615505" />
				  <FishSpot XYZ="156.4031, -16.147, 184.9823" Heading="0.262377" />
				  <FishSpot XYZ="147.5375, -15.9389, 192.8667" Heading="1.100135" />
				  <FishSpot XYZ="147.2261, -16.147, 208.9519" Heading="1.694946" />
				  <FishSpot XYZ="145.1826, -16.147, 233.702" Heading="1.263501" />
				  <FishSpot XYZ="138.3746, -16.147, 251.1616" Heading="1.376603" />
				  <FishSpot XYZ="114.6133, -10.54508, 283.3896" Heading="0.4299355" />
				  <FishSpot XYZ="111.7038, -10.54437, 284.8813" Heading="0.2016482" />
				  <FishSpot XYZ="99.04507, -10.54831, 278.2242" Heading="4.842828" />
				  <FishSpot XYZ="96.5787, -10.72846, 265.5081" Heading="3.780969" />
				  <FishSpot XYZ="111.7058, -15.1891, 259.9095" Heading="2.918078" />
				  <FishSpot XYZ="126.1687, -16.147, 253.2945" Heading="4.277341" />
				  <FishSpot XYZ="135.6655, -16.43267, 228.8765" Heading="4.49097" />
				  <FishSpot XYZ="136.8619, -16.43841, 207.6226" Heading="4.798845" />
				  <FishSpot XYZ="129.1158, -15.9389, 192.3472" Heading="5.140231" />
				  <FishSpot XYZ="125.4946, -16.42076, 176.6562" Heading="5.387369" />
				  <FishSpot XYZ="114.8244, -16.43497, 164.5856" Heading="5.460673" />
				  <FishSpot XYZ="99.25191, -16.43594, 154.0858" Heading="5.812531" />
				  <FishSpot XYZ="99.25191, -16.43594, 154.0858" Heading="5.812531" />
				  <FishSpot XYZ="73.21329, -16.41709, 158.5814" Heading="0.8236806" />
				  <FishSpot XYZ="65.36868, -16.41953, 168.0592" Heading="1.045686" />
				  <FishSpot XYZ="63.15968, -16.41992, 180.3923" Heading="1.717986" />
				  <FishSpot XYZ="61.16044, -16.41525, 203.1563" Heading="1.347277" />
				  <FishSpot XYZ="43.69601, -16.37939, 227.7763" Heading="0.5032363" />
				  <FishSpot XYZ="33.70361, -16.2267, 223.7251" Heading="3.709756" />
				  <FishSpot XYZ="46.21745, -16.41889, 212.2056" Heading="4.05533" />
				  <FishSpot XYZ="52.48001, -16.31824, 174.8561" Heading="5.054357" />
				  <FishSpot XYZ="40.93481, -16.37786, 157.169" Heading="5.617749" />
				  <FishSpot XYZ="8.268972, -16.39368, 146.7259" Heading="0.05084634" />
				  <FishSpot XYZ="-18.29049, -16.41725, 160.9027" Heading="0.8404355" />
				  <FishSpot XYZ="-32.80128, -16.40516, 188.2623" Heading="1.315867" />
				  <FishSpot XYZ="-35.52627, -16.41462, 223.8825" Heading="1.510647" />
				  <FishSpot XYZ="-54.90854, -16.18778, 256.2732" Heading="4.74858" />
				  <FishSpot XYZ="-60.20001, -16.39952, 216.7724" Heading="5.125571" />
				  <FishSpot XYZ="-78.47475, -16.40033, 191.3069" Heading="5.72038" />
				  <FishSpot XYZ="-117.0184, -16.4176, 184.8303" Heading="0.3210294" />
				  <FishSpot XYZ="-138.3651, -16.41966, 201.4456" Heading="0.9451616" />
				  <FishSpot XYZ="-153.8668, -16.147, 211.654" Heading="4.668996" />
				  <FishSpot XYZ="-138.4629, -16.14739, 185.7588" Heading="3.810294" />
				  <FishSpot XYZ="-112.6564, -16.147, 173.1279" Heading="3.295073" />
				  <FishSpot XYZ="-84.52315, -16.247, 165.2064" Heading="4.497255" />
				</FishSpots>
			  </ExFish>
			  <LLDesynth ItemIds="36385,36387,36388,36389" />
			</While>
		</If>	
		<If Condition="ClassName != ClassJobType.Culinarian">
			<ChangeClass Job="Culinarian"/>
		</If>
		<If Condition="ClassName == ClassJobType.Culinarian">
			<AutoInventoryEquip/>
			<WaitTimer WaitTime="5"/>
			<Lisbeth Json="[{'Group':1,'Item':35661,'Amount':5,'Enabled':true,'Type':'Culinarian','Collectable':false, 'ConditionalJob':'Culinarian'}]"/>
			<If Condition="Core.Me.Levels[ClassJobType.Culinarian] &lt; 84">		
				<WaitTimer WaitTime="5"/>
				<LLoadProfile Path="80-84 Culinarian.xml"/>
			</If>
		</If>
	</If>
	
	<!-- 80-82  -->
	<If Condition="(Core.Me.Levels[ClassJobType.Culinarian] &gt; 79) and  (Core.Me.Levels[ClassJobType.Culinarian] &lt; 82)">			
		<If Condition="not HasAtLeast(36386,5)">			
			<LLToast message="Please buy Northern Herring x10 from Marketboard."/>
			<LLStopBot/>
		</If>
		<If Condition="ClassName != ClassJobType.Culinarian">
			<ChangeClass Job="Culinarian"/>
		</If>
		<If Condition="ClassName == ClassJobType.Culinarian">
			<AutoInventoryEquip/>
			<WaitTimer WaitTime="5"/>
			<Lisbeth Json="[{'Group':1,'Item':35661,'Amount':5,'Enabled':true,'Type':'Culinarian','Collectable':false, 'ConditionalJob':'Culinarian'}]"/>
		</If>
	</If>
	
	<!-- Check to see if have collectables -->
	<While Condition="HasRarefiedItem() &gt; 0">
		<LLTurnInCollectables/>
		<While Condition="ItemCount(25199) &gt; 249"> <!-- 25199 = White Crafters' Scrip Scrip -->
			<BuyInclusionShopItem ItemId="33927" Count="0"/>
		</While>
	</While>

	<!-- 82-84  -->
	<If Condition="(Core.Me.Levels[ClassJobType.Culinarian] &gt; 81) and  (Core.Me.Levels[ClassJobType.Culinarian] &lt; 84)">
		<If Condition="ClassName != ClassJobType.Culinarian">
			<ChangeClass Job="Culinarian"/>
		</If>			
		<If Condition="not HasAtLeast(36523,5)">			
			<LLToast message="Please buy Spiny King Crab x10 from Marketboard."/>
			<LLStopBot/>
		</If>
		<If Condition="ClassName == ClassJobType.Culinarian">
			<AutoInventoryEquip/>
			<WaitTimer WaitTime="5"/>
			<Lisbeth Json="[{'Group':1,'Item':35662,'Amount':5,'Enabled':true,'Type':'Culinarian','Collectable':false, 'ConditionalJob':'Culinarian'}]"/>
		</If>
	</If>
	
	<If Condition="Core.Me.Levels[ClassJobType.Culinarian] &lt; 84">		
		<WaitTimer WaitTime="5"/>
		<LLoadProfile Path="80-84 Culinarian.xml"/>
	</If>

	<!-- Load Start -->
	<LogMessage Message="Congrats on Level 84 on Culinarian, moving on."/>
	<AutoInventoryEquip/>
	<WaitTimer WaitTime="5"/>
	<LLoadProfile Path="../Start.xml"/>
	
</Order>
<CodeChunks>
	<CodeChunk name="Leave">
	<![CDATA[
		if (DutyManager.InInstance)
		{
		DutyManager.LeaveActiveDuty();
		if (await Coroutine.Wait(30000, () => CommonBehaviors.IsLoading))
		{
		await Coroutine.Yield();
		await Coroutine.Wait(Timeout.Infinite, () => !CommonBehaviors.IsLoading);
		await Coroutine.Sleep(1000);
		}
		}
	]]>
	</CodeChunk>
	<CodeChunk Name="TurnIn">
	<![CDATA[
		Logging.Write("[Handin] calling");
		await LlamaLibrary.Utilities.Ishgard.Handin();
	]]>
	</CodeChunk>
</CodeChunks>
</Profile>